FROM lukemathwalker/cargo-chef:latest-rust-1 AS chef
WORKDIR /app

RUN apt-get update && apt-get install clang -y

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder 
COPY --from=planner /app/recipe.json recipe.json

# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --profile profiling --recipe-path recipe.json

# Build application
# Copy over all project folders specified in the .dockerignore
COPY . .
RUN cargo build --profile profiling --bin trin

# We do not need the Rust toolchain to run the binary!
FROM debian:bookworm
WORKDIR /app

# copy build artifacts from build stage
COPY --from=builder /app/target/profiling/trin /usr/bin/

RUN apt-get update && apt-get install -y linux-perf linux-base

# Create directory for flamegraph output
RUN mkdir -p /tmp/flamegraph

ENTRYPOINT ["perf", "record", "-g", "--output", "/tmp/perf/perf.data", "trin"]
